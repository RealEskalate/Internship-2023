// Mocks generated by Mockito 5.4.0 from annotations
// in dark_knights/test/features/article/domain/usecases/get_articles_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dark_knights/core/errors/failures.dart' as _i5;
import 'package:dark_knights/features/article/domain/entities/article.dart'
    as _i6;
import 'package:dark_knights/features/article/domain/repositories/article_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i3.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>> getArticles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Article>>(
          this,
          Invocation.method(
            #getArticles,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Article>> getArticleById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticleById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>.value(
            _FakeEither_0<_i5.Failure, _i6.Article>(
          this,
          Invocation.method(
            #getArticleById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>> getArticlesByUserId(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticlesByUserId,
          [userId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Article>>(
          this,
          Invocation.method(
            #getArticlesByUserId,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>> searchArticles(
          String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchArticles,
          [keyword],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Article>>(
          this,
          Invocation.method(
            #searchArticles,
            [keyword],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>> filterArticles(
          List<dynamic>? filters) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterArticles,
          [filters],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Article>>(
          this,
          Invocation.method(
            #filterArticles,
            [filters],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Article>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Article>> postArticle(
          _i6.Article? article) =>
      (super.noSuchMethod(
        Invocation.method(
          #postArticle,
          [article],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>.value(
            _FakeEither_0<_i5.Failure, _i6.Article>(
          this,
          Invocation.method(
            #postArticle,
            [article],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Article>> updateArticle(
    String? id,
    _i6.Article? article,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArticle,
          [
            id,
            article,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>.value(
            _FakeEither_0<_i5.Failure, _i6.Article>(
          this,
          Invocation.method(
            #updateArticle,
            [
              id,
              article,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Article>> deleteArticle(
          dynamic String) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [String],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>.value(
            _FakeEither_0<_i5.Failure, _i6.Article>(
          this,
          Invocation.method(
            #deleteArticle,
            [String],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Article>>);
}
