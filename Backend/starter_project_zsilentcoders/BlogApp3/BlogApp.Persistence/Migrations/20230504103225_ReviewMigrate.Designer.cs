// <auto-generated />
using System;
using BlogApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlogApp.Persistence.Migrations
{
    [DbContext(typeof(BlogAppDbContext))]
    [Migration("20230504103225_ReviewMigrate")]
    partial class ReviewMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlogApp.Domain._Index", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("_Indices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Index"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Index"
                        });
                });

            modelBuilder.Entity("BlogApp.Domain._Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsResolved")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("_Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Comment = "this is the first reveiw",
                            DateCreated = new DateTime(2023, 5, 4, 13, 32, 25, 266, DateTimeKind.Local).AddTicks(3539),
                            IsResolved = false,
                            LastModifiedDate = new DateTime(2023, 5, 4, 13, 32, 25, 266, DateTimeKind.Local).AddTicks(3559),
                            ReviewerId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            Comment = "this is the second reveiw",
                            DateCreated = new DateTime(2023, 5, 4, 13, 32, 25, 266, DateTimeKind.Local).AddTicks(3561),
                            IsResolved = false,
                            LastModifiedDate = new DateTime(2023, 5, 4, 13, 32, 25, 266, DateTimeKind.Local).AddTicks(3562),
                            ReviewerId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
